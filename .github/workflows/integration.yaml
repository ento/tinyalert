on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  install-and-use:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: run action
        uses: ./
        with:
          install: true
      - name: assert
        run: |
          tinyalert --help
  measure-and-report:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - config-path: kitchen-sink.toml
            measure: 'simple'
            expected-outcome: 'ok'
          - config-path: critical.toml
            measure: 'critical'
            expected-outcome: 'alert'
    steps:
      - uses: actions/checkout@v3
      - name: run action
        uses: ./
        id: act
        continue-on-error: true
        with:
          db-path: db.sqlite
          config-path: integration/${{ matrix.config-path }}
          measure: ${{ matrix.measure }}
          report: true
      - name: assert
        shell: python
        env:
          outcome: ${{ steps.act.outputs.outcome }}
          expected_outcome: ${{ matrix.expected-outcome }}
          reports: ${{ steps.act.outputs.reports }}
          table: ${{ steps.act.outputs.table }}
          list: ${{ steps.act.outputs.list }}
          diff: ${{ steps.act.outputs.diff }}
        run: |
          import os
          assert os.environ["outcome"] == os.environ["expected_outcome"], f"{os.environ['outcome']} != {os.environ['expected_outcome']}:\n{os.environ['reports']}"
          assert os.environ["reports"]
          assert os.environ["table"]
          assert os.environ["list"]
          assert os.environ["diff"]
      - name: prune
        uses: ./
        with:
          db-path: db.sqlite
          prune: 1
