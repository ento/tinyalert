name: Release

on:
  pull_request:
  push:
    branches:
      - "master"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        id: build
        with:
          platforms: linux/amd64,linux/arm64
          load: true
          push: ${{ github.event_name == 'push' }}
          secrets: |
            CACHIX_AUTH_TOKEN=${{ secrets.CACHIX_AUTH_TOKEN }}
            CACHIX_CACHE_NAME=${{ vars.CACHIX_CACHE_NAME }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - uses: ./setup/
        with:
          digest: ${{ steps.build.outputs.digest }}
      - name: Smoke test
        run: |
          tinyalert --help
          tinyalert \
            --db tinyalert.sqlite \
            measure \
            --config integration/smoke.toml \
            --metrics smoke
          if [ ! -f tinyalert.sqlite ]; then
            echo "Expected tinyalert.sqlite to be created"
            exit 1
          fi
      - if: ${{ github.event_name == 'push' }}
        name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

  docker-smoke-test:
    runs-on: ubuntu-latest
    needs: [release-docker]
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./setup/
        with:
          digest: ${{ needs.release-docker.outputs.digest }}
      - run: |
          tinyalert --help
