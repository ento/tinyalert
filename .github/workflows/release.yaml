name: Release

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        id: push
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          secrets: |
            CACHIX_AUTH_TOKEN=${{ secrets.CACHIX_AUTH_TOKEN }}
            CACHIX_CACHE_NAME=${{ vars.CACHIX_CACHE_NAME }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  docker-smoke-test:
    runs-on: ubuntu-latest
    needs: [release-docker]
    steps:
      - uses: actions/checkout@v4
      - uses: ./setup/
        with:
          digest: ${{ needs.release-docker.outputs.digest }}
      - run: |
          tinyalert --help
